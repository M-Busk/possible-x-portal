[versions]
springBoot = "3.3.8"
springDependencyManagement = "1.1.7"
springSecurityTest = "6.4.2"
lombok = "1.18.36"
lombokMapStructBinding = "0.2.0"
openApi = "2.6.0"
therApi = "0.15.0"
reactorTest = "3.7.3"
jUnit = "1.11.4"
typescriptGenerator = "3.2.1263"
mapStruct = "1.6.3"
postgresql = "42.7.5"
h2 = "2.3.232"
hibernateValidator = "8.0.2.Final"
titaniumJsonLd = "1.5.0"
jakartaJson = "2.0.1"

[libraries]
springBootStarterActuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "springBoot" }
springBootStarterWeb = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "springBoot" }
springBootStarterWebflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "springBoot" }
springBootStarterTest = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "springBoot" }
springBootStarterDataJpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "springBoot" }
springBootStarterValidation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "springBoot" }
springBootDevtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "springBoot" }
springBootStarterSecurity = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "springBoot" }
springSecurityTest = { module = "org.springframework.security:spring-security-test", version.ref = "springSecurityTest" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
lombokMapStructBinding = { module = "org.projectlombok:lombok-mapstruct-binding", version.ref = "lombokMapStructBinding" }
mapStruct = { module = "org.mapstruct:mapstruct", version.ref = "mapStruct" }
mapStructProcessor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapStruct" }
openApi = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "openApi" }
therApi = { module = "com.github.therapi:therapi-runtime-javadoc", version.ref = "therApi" }
therApiScribe = { module = "com.github.therapi:therapi-runtime-javadoc-scribe", version.ref = "therApi" }
reactorTest = { module = "io.projectreactor:reactor-test", version.ref = "reactorTest" }
jUnit = { module = "org.junit.platform:junit-platform-launcher", version.ref = "jUnit" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }
hibernateValidator = { module = "org.hibernate:hibernate-validator", version.ref = "hibernateValidator" }
titaniumJsonLd = { module = "com.apicatalog:titanium-json-ld-jre8", version.ref = "titaniumJsonLd" }
jakartaJson = { module = "org.glassfish:jakarta.json", version.ref = "jakartaJson" }

[plugins]
springBoot = { id = "org.springframework.boot", version.ref = "springBoot" }
springDependencyManagement = { id = "io.spring.dependency-management", version.ref = "springDependencyManagement" }
typescriptGenerator = { id = "cz.habarta.typescript-generator", version.ref = "typescriptGenerator" }

