name: Build and Deploy EDC to Cluster
on:
  #  pull_request:
  #    types:
  #      - opened
  #      - reopened
  #      - review_requested
  push:
    branches: [ "develop", "main" ]
  workflow_dispatch:
env:
  REGISTRY: ghcr.io
  REGISTRY_NAMESPACE: possible-x
  K8S_NAMESPACE: ${{ github.ref == 'refs/heads/main' && 'mvd-001-demo' || 'edc-dev' }}
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.REGISTRY_NAMESPACE }}/portal
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main'}}
            type=raw,value=latest-${{github.ref_name }},enable=${{ github.ref != 'refs/heads/main'}}
            ${{ github.sha }}
      - name: Build and push 
        id: build_and_push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # deploy-consumer:
  #   runs-on: 'ubuntu-latest'
  #   needs: build-and-push-image
  #   steps:
  #     - name: 'Invoke Kubectl Consumer'
  #       uses: actions-hub/kubectl@v1.31.0
  #       env:
  #         KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  #       with:
  #         args: "set image deployment/consumer-edc-possible-x-edc-management -n ${{ env.K8S_NAMESPACE }} possible-x-edc-portal=${{ env.REGISTRY }}/${{ env.REGISTRY_NAMESPACE }}/portal:${{ github.sha }}"
  # deploy-provider:
  #   runs-on: 'ubuntu-latest'
  #   needs: build-and-push-image
  #   steps:
  #     - name: 'Invoke Kubectl Provider'
  #       uses: actions-hub/kubectl@v1.31.0
  #       env:
  #         KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  #       with:
  #         args: "set image deployment/provider-edc-management-possible-x-edc-management -n ${{ env.K8S_NAMESPACE }} possible-x-edc-portal=${{ env.REGISTRY }}/${{ env.REGISTRY_NAMESPACE }}/portal:${{ github.sha }}"